{% raw %}
name: PyPi release

on:
  push:
    tags:
    - '*.*.*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true


      - name: Install dependencies
        shell: bash
        run:  |
          poetry install --no-dev --no-interaction --no-root

      - name: Build packages
        shell: bash
        run: poetry build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false


      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/{% endraw %}{{ project_name }}{% raw %}-${{ steps.tag.outputs.tag }}-py3-none-any.whl
          asset_name: {% endraw %}{{ project_name }}{% raw %}_${{ steps.tag.outputs.tag }}.whl
          asset_content_type: application/octet-stream

      - name: Publish package to pypi
        uses: pypa/gh-action-pypi-publish@v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
{% endraw %}
