[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "{{ project_name }}"
description = "{{ project_description }}"
version = "0.1.0"
license = "{{ license|upper }}"

authors = []

readme = "README.md"

repository = "https://github.com/{{ organization }}/{{ project_name }}"

keywords = []

classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-memprof = "^0.2.0"
pytest-cov = "^6.0.0"
pytest-datafiles = "^3.0"
pytest-xdist = "^3.0.2"
xdoctest = "^1.0.0"

darglint = "^1.2.3"

mypy = "^1.0"

pre-commit = "^4.0.1"

unimport = "^1.0.0"

toml = "^0.10.2"

recommonmark = "^0.7.1"

ruff = "^0.7.3"


[tool.poetry.group.copier]
optional = true

[tool.poetry.group.copier.dependencies]
copier = "^9.3.1"
jinja2-time = "^0.2.0"

[tool.darglint]
docstring_style = "google"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--xdoc --cov-report xml:coverage.xml --cov {{project_name.lower().replace('-', '_')}}"
markers = ["datafiles"]

[tool.doc8]
max-line-length = 100
allow-long-titles = true
ignore = ["D001"]

[tool.ruff]
line-length = 100
indent-width = 4
preview = true

[tool.ruff.lint]
select = ["ALL"]
fixable = ["ALL"]
unfixable = ["F401"]
ignore = ["ANN101", "CPY001"]
preview = true

[tool.ruff.lint.isort]
force-single-line = true
lines-after-imports = 2
lines-between-types = 1

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pydocstyle]
convention = "google"
