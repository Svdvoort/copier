[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "{{ project_name }}"
description = "{{ project_description }}"
version = "0.1.0"
license = "{{ license|upper }}"

authors = []

readme = "README.md"

repository = "https://github.com/{{ organization }}/{{ project_name }}"

keywords = []

classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-memprof = "^0.2.0"
pytest-cov = "^5.0.0"
pytest-datafiles = "^3.0"
pytest-xdist = "^3.0.2"
xdoctest = "^1.0.0"

darglint = "^1.2.3"

mypy = "^1.0"

pre-commit = "^3.4.0"

unimport = "^1.0.0"

toml = "^0.10.2"

recommonmark = "^0.7.1"

ruff = "^0.5.1"


flake8-aaa = "^0.17.0"
flake8-annotations-complexity = "^0.0.8"
flake8-annotations-coverage = "^0.0.6"
flake8-assertive = "^2.0.0"
flake8-black = "^0.3.2"
flake8-broken-line = "^1.0.0"
flake8-cognitive-complexity = "^0.1.0"
flake8-docstrings = "^1.5.0"
flake8-expression-complexity = "^0.0.11"
flake8-functions = "^0.0.8"
flake8-markdown = "^0.5.0"
flake8-mutable = "^1.2.0"
flake8-pep3101 = "^2.0.0"
flake8-plugin-utils = "^1.3.0"
flake8-polyfill = "^1.0.2"
flake8-pytest = "^1.3"
flake8-requirements = "^2.2.1"
flake8-rst = "^0.8.0"
flake8-rst-docstrings = "^0.3.0"
flake8-string-format = "^0.3.0"
flake8-typing-imports = "^1.9.0"
flake8-variables-names = "^0.0.6"
pandas-stubs = "^2.2.2.240514"
matplotlib-stubs = "^0.2.0"


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
tomlkit = "^0.12.1"
m2r2 = "^0.3.2"
sphinx = "^7"
sphinx-autodoc-typehints = "^2.0"
sphinx-rtd-theme = "^2.0.0"
doc8 = "^1.1.1"
esbonio = "^0.16.4"

[tool.poetry.group.copier]
optional = true

[tool.poetry.group.copier.dependencies]
copier = "^9.3.1"
jinja2-time = "^0.2.0"

[tool.darglint]
docstring_style = "google"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--xdoc --cov-report xml:coverage.xml --cov {{project_name.lower().replace('-', '_')}}"
markers = ["datafiles"]

[tool.doc8]
max-line-length = 100
allow-long-titles = true
ignore = ["D001"]

[tool.ruff.lint.isort]
force-single-line = true
lines-after-imports = 2
lines-between-types = 1

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"


[tool.ruff.lint.pydocstyle]
convention = "google"
